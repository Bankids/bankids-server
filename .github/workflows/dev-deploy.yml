# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Deploy to Dev

on:
  push:
    branches:
      - dev

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-
      #
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Make application-dev.properties
        run: |
          touch ./src/main/resources/application-dev.properties
          echo "$PROPERTIES_DEV" > ./src/main/resources/application-dev.properties
        env:
          PROPERTIES_DEV: ${{ secrets.PROPERTIES_DEV }}

      - name: Make logging-spring.xml
        run: |
          touch ./src/main/resources/logback-spring.xml
          echo "$LOGGINGBACK" > ./src/main/resources/logback-spring.xml
        env:
          LOGGINGBACK: ${{ secrets.LOGGINGBACK }}

      - name: Make firebase-key.json
        run: |
          touch ./src/main/resources/bankidz-firebase.json
          echo "$FIREBASEKEY" > ./src/main/resources/bankidz-firebase.json
        env:
          FIREBASEKEY: ${{ secrets.FIREBASE_KEY }}

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: sanbonai06/bankids-server-dev


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build & push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}

      - name: create remote directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ubuntu
          key: ${{ secrets.KEY_DEV }}
          script: mkdir -p ~/srv/ubuntu/bankids_dev

      - name: copy source via ssh key
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete
          remote_path: ~/srv/ubuntu/
          remote_host: ${{ secrets.HOST_DEV }}
          remote_user: ubuntu
          remote_key: ${{ secrets.KEY_DEV }}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ubuntu
          key: ${{ secrets.KEY_DEV }}
          script: |
            sh ~/srv/ubuntu/config/scripts/deploy.sh
            sudo docker image prune -a
            sudo docker-compose -f ~/srv/ubuntu/docker-compose.yml pull
            sudo docker-compose -f ~/srv/ubuntu/docker-compose.yml up --build -d

